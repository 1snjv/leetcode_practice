//sort on the basis of area and then for each index find the maximum length of increasing sequence upto it..



static bool comp(pair<int, int> p1,pair<int, int> p2 )
    {
        return (p1.first*p1.second<p2.first*p2.second);
    }
    
    int maxEnvelopes(vector<pair<int, int>>& e) {
        
        int n=e.size();
        if(n==0)
            return 0;
        sort(e.begin(), e.end(), comp);
        
        vector<int>dp(n,0);
        dp[0]=1;
        int mx=INT_MIN;
        for( int i=1;i<n;i++)
        {
            for( int j=0;j<i;j++)
            {
               if(e[i].first>e[j].first && e[i].second>e[j].second)
                   dp[i]=max(dp[i],dp[j]);
            }
            dp[i]++;
            mx=max(mx,dp[i]);
        }
        mx=max(dp[0],mx);
        cout<<mx<<endl;
        return mx;
        
    }
